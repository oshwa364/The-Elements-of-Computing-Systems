/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    /** Initializes the keyboard. */
    function void init() {
        return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        return Memory.peek(24576);
    }

    /**	Waits until a key is pressed on the keyboard and released,
     *  then echoes the key to the screen, and returns the character 
     *  of the pressed key. */
    function char readChar() {
        var char c, flag;
        
        // do Output.printChar(0);    //Why does this not work... :(
        do Output.printChar(51);
        do Output.backSpace();

        while ((c = 0) | (flag > 0)) {
            let flag = Keyboard.keyPressed();
            if (flag > 0) {
                let c = flag;
            }
        }
        if (~(c = 128)) { do Output.printChar(c); }
        else { do Output.printChar(32); }
        return c;
    }

    /**	Displays the message on the screen, reads from the keyboard the entered
     *  text until a newline character is detected, echoes the text to the screen,
     *  and returns its value. Also handles user backspaces. */
    function String readLine(String message) {
        var String str;
        var char newLineChar, backSpaceChar, c;
        var boolean flag;

        let str = String.new(40); // arbitrary max line length
        do Output.printString(message);
        let newLineChar = String.newLine();
        let backSpaceChar = String.backSpace();
        let flag = true;
        
        while (flag) {
            let c = Keyboard.readChar();
            if (c = newLineChar) {
                let flag = false;
                do Output.println();
            }
            else {
                if (c = backSpaceChar) {
                    do Output.backSpace();
                    do Output.backSpace();
                    do str.eraseLastChar();
                }
                else {
                    let str = str.appendChar(c);
                }
            }
        }
        return str;
    }   

    /** Displays the message on the screen, reads from the keyboard the entered
     *  text until a newline character is detected, echoes the text to the screen,
     *  and returns its integer value (until the first non-digit character in the
     *  entered text is detected). Also handles user backspaces. */
    function int readInt(String message) {
        var String str;
        let str = Keyboard.readLine(message);
        return str.intValue();
    }
}
